#include<queue>
#include<vector>
using namespace std;
void findMedian(int arr[], int n){
    /* Don't write main().
     * Don't read input, it is passed as function argument.
     * Print output as specified in the question.
     */
priority_queue<int,vector<int>,greater<int>> min;
priority_queue<int>max;
    int count=1;
    for(int i=0;i<n;i++)
    {
        if(max.empty()||max.top()>arr[i])
        { max.push(arr[i]);
         }
        else
        {min.push(arr[i]);}
        
        if( max.size()<min.size() &&min.size()-max.size()>1)
        {
           int k=min.top();
            min.pop();
            max.push(k);
        }
        if(max.size()>min.size()&&max.size()-min.size()>1)
        {
            int k=max.top();
            max.pop();
            min.push(k);
        }
        if(count==1)
        {cout<<max.top() <<endl;}
          else if(count%2!=0)
        {
            if(max.size()>min.size())
            {cout<<max.top()<<endl;}
            else
            {cout<<min.top()<<endl;}
        }
          else{
            int k=(max.top()+min.top())/2;
            cout<<k<<endl;
        }
     count++;
         }   
}
